using System;

namespace CalculadoraApp
{
    // Classe responsável pelas operações matemáticas
    class Calculadora
    {
        public double Somar(double a, double b) => a + b;
        public double Subtrair(double a, double b) => a - b;
        public double Multiplicar(double a, double b) => a * b;

        public double Dividir(double a, double b)
        {
            if (b == 0)
                throw new DivideByZeroException("Não é possível dividir por zero!");
            return a / b;
        }

        public double Potenciar(double a, double b) => Math.Pow(a, b);
    }

    class Program
    {
        static void Main(string[] args)
        {
            Calculadora calc = new Calculadora();
            bool continuar = true;

            while (continuar)
            {
                Console.Clear();
                Console.WriteLine("=== CALCULADORA CONSOLE ===\n");
                Console.WriteLine("Escolha uma operação:");
                Console.WriteLine("1. Soma");
                Console.WriteLine("2. Subtração");
                Console.WriteLine("3. Multiplicação");
                Console.WriteLine("4. Divisão");
                Console.WriteLine("5. Potenciação");
                Console.WriteLine("6. Sair");
                Console.Write("\nDigite sua opção (1-6): ");

                string entrada = Console.ReadLine();

                if (!int.TryParse(entrada, out int opcao))
                {
                    Console.WriteLine("\n⚠ Opção inválida! Digite um número entre 1 e 6.");
                    Pausar();
                    continue;
                }

                switch (opcao)
                {
                    case 1:
                        RealizarOperacao(calc.Somar, "Soma");
                        break;
                    case 2:
                        RealizarOperacao(calc.Subtrair, "Subtração");
                        break;
                    case 3:
                        RealizarOperacao(calc.Multiplicar, "Multiplicação");
                        break;
                    case 4:
                        RealizarOperacao(calc.Dividir, "Divisão");
                        break;
                    case 5:
                        RealizarOperacao(calc.Potenciar, "Potenciação");
                        break;
                    case 6:
                        continuar = false;
                        Console.WriteLine("\nSaindo da calculadora. Até mais!");
                        break;
                    default:
                        Console.WriteLine("\n⚠ Opção inválida! Tente novamente.");
                        break;
                }

                if (continuar)
                {
                    Pausar();
                }
            }
        }

        // Método genérico para executar operações
        static void RealizarOperacao(Func<double, double, double> operacao, string nomeOperacao)
        {
            Console.WriteLine($"\n--- {nomeOperacao.ToUpper()} ---");

            double num1 = LerNumero("Digite o primeiro número: ");
            double num2 = LerNumero("Digite o segundo número: ");

            try
            {
                double resultado = operacao(num1, num2);
                Console.WriteLine($"\nResultado: {resultado}");
            }
            catch (DivideByZeroException ex)
            {
                Console.WriteLine($"\nErro: {ex.Message}");
            }
        }

        // Método auxiliar para leitura segura de números
        static double LerNumero(string mensagem)
        {
            double numero;
            while (true)
            {
                Console.Write(mensagem);
                string entrada = Console.ReadLine();

                if (double.TryParse(entrada, out numero))
                    return numero;

                Console.WriteLine("Entrada inválida! Tente novamente.");
            }
        }

        // Método para pausar a tela
        static void Pausar()
        {
            Console.WriteLine("\nPressione qualquer tecla para continuar...");
            Console.ReadKey();
        }
    }
}
